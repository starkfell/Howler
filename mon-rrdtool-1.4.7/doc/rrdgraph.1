.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "RRDGRAPH 1"
.TH RRDGRAPH 1 "2010-12-07" "1.4.7" "rrdtool"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
rrdgraph \- Round Robin Database tool graphing functions
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBrrdtool graph|graphv\fR \fIfilename\fR
[\fIoption\fR ...]
[\fIdata definition\fR ...]
[\fIdata calculation\fR ...]
[\fIvariable definition\fR ...]
[\fIgraph element\fR ...]
[\fIprint element\fR ...]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBgraph\fR function of \fBRRDtool\fR is used to present the
data from an \fB\s-1RRD\s0\fR to a human viewer.  Its main purpose is to
create a nice graphical representation, but it can also generate
a numerical report.
.SH "OVERVIEW"
.IX Header "OVERVIEW"
\&\fBrrdtool graph\fR needs data to work with, so you must use one or more
\&\fBdata definition\fR statements to collect this
data.  You are not limited to one database, it's perfectly legal to
collect data from two or more databases (one per statement, though).
.PP
If you want to display averages, maxima, percentiles, etcetera
it is best to collect them now using the
\&\fBvariable definition\fR statement.
Currently this makes no difference, but in a future version
of RRDtool you may want to collect these values before consolidation.
.PP
The data fetched from the \fB\s-1RRA\s0\fR is then \fBconsolidated\fR so that
there is exactly one data point per pixel in the graph. If you do
not take care yourself, \fBRRDtool\fR will expand the range slightly
if necessary. Note, in that case the first and/or last pixel may very
well become unknown!
.PP
Sometimes data is not exactly in the format you would like to display
it. For instance, you might be collecting \fBbytes\fR per second, but
want to display \fBbits\fR per second. This is what the \fBdata
calculation\fR command is designed for. After
\&\fBconsolidating\fR the data, a copy is made and this copy is modified
using a rather powerful \fB\s-1RPN\s0\fR command set.
.PP
When you are done fetching and processing the data, it is time to
graph it (or print it).  This ends the \fBrrdtool graph\fR sequence.
.PP
Use \fBgraphv\fR instead of \fBgraph\fR to get detailed information about the
graph geometry and data once it is drawn. See the bottom of the document for
more information.
.SH "OPTIONS"
.IX Header "OPTIONS"
.SS "\fIfilename\fP"
.IX Subsection "filename"
The name and path of the graph to generate. It is recommended to
end this in \f(CW\*(C`.png\*(C'\fR, \f(CW\*(C`.svg\*(C'\fR or \f(CW\*(C`.eps\*(C'\fR, but \fBRRDtool\fR does not enforce this.
.PP
\&\fIfilename\fR can be '\f(CW\*(C`\-\*(C'\fR' to send the image to \f(CW\*(C`stdout\*(C'\fR. In
this case, no other output is generated.
.SS "Time range"
.IX Subsection "Time range"
[\fB\-s\fR|\fB\-\-start\fR \fItime\fR]
[\fB\-e\fR|\fB\-\-end\fR \fItime\fR]
[\fB\-S\fR|\fB\-\-step\fR \fIseconds\fR]
.PP
The start and end of the time series you would like to display, and which
\&\fB\s-1RRA\s0\fR the data should come from.  Defaults are: 1 day ago until
now, with the best possible resolution. \fBStart\fR and \fBend\fR can
be specified in several formats, see
AT-STYLE \s-1TIME\s0 \s-1SPECIFICATION\s0 and rrdgraph_examples.
By default, \fBrrdtool graph\fR calculates the width of one pixel in
the time domain and tries to get data from an \fB\s-1RRA\s0\fR with that
resolution.  With the \fBstep\fR option you can alter this behavior.
If you want \fBrrdtool graph\fR to get data at a one-hour resolution
from the \fB\s-1RRD\s0\fR, set \fBstep\fR to 3'600. Note: a step smaller than
one pixel will silently be ignored.
.SS "Labels"
.IX Subsection "Labels"
[\fB\-t\fR|\fB\-\-title\fR \fIstring\fR]
[\fB\-v\fR|\fB\-\-vertical\-label\fR \fIstring\fR]
.PP
A horizontal string at the top of the graph and/or a vertically
placed string at the left hand side of the graph.
.SS "Size"
.IX Subsection "Size"
[\fB\-w\fR|\fB\-\-width\fR \fIpixels\fR]
[\fB\-h\fR|\fB\-\-height\fR \fIpixels\fR]
[\fB\-j\fR|\fB\-\-only\-graph\fR]
[\fB\-D\fR|\fB\-\-full\-size\-mode\fR]
.PP
By default, the width and height of the \fBcanvas\fR (the part with
the actual data and such). This defaults to 400 pixels by 100 pixels.
.PP
If you specify the \fB\-\-full\-size\-mode\fR option, the width and height
specify the final dimensions of the output image and the canvas
is automatically resized to fit.
.PP
If you specify the \fB\-\-only\-graph\fR option and set the height < 32
pixels you will get a tiny graph image (thumbnail) to use as an icon
for use in an overview, for example. All labeling will be stripped off
the graph.
.SS "Limits"
.IX Subsection "Limits"
[\fB\-u\fR|\fB\-\-upper\-limit\fR \fIvalue\fR]
[\fB\-l\fR|\fB\-\-lower\-limit\fR \fIvalue\fR]
[\fB\-r\fR|\fB\-\-rigid\fR]
.PP
By default the graph will be autoscaling so that it will adjust the
y\-axis to the range of the data. You can change this behavior by
explicitly setting the limits. The displayed y\-axis will then range at
least from \fBlower-limit\fR to \fBupper-limit\fR. Autoscaling will still
permit those boundaries to be stretched unless the \fBrigid\fR option is
set.
.PP
[\fB\-A\fR|\fB\-\-alt\-autoscale\fR]
.PP
Sometimes the default algorithm for selecting the y\-axis scale is not
satisfactory. Normally the scale is selected from a predefined
set of ranges and this fails miserably when you need to graph something
like \f(CW\*(C`260 + 0.001 * sin(x)\*(C'\fR. This option calculates the minimum and
maximum y\-axis from the actual minimum and maximum data values. Our example
would display slightly less than \f(CW\*(C`260\-0.001\*(C'\fR to slightly more than
\&\f(CW\*(C`260+0.001\*(C'\fR (this feature was contributed by Sasha Mikheev).
.PP
[\fB\-J\fR|\fB\-\-alt\-autoscale\-min\fR]
.PP
Where \f(CW\*(C`\-\-alt\-autoscale\*(C'\fR will modify both the absolute maximum \s-1AND\s0 minimum
values, this option will only affect the minimum value. The maximum
value, if not defined on the command line, will be 0. This option can
be useful when graphing router traffic when the \s-1WAN\s0 line uses compression,
and thus the throughput may be higher than the \s-1WAN\s0 line speed.
.PP
[\fB\-M\fR|\fB\-\-alt\-autoscale\-max\fR]
.PP
Where \f(CW\*(C`\-\-alt\-autoscale\*(C'\fR will modify both the absolute maximum \s-1AND\s0 minimum
values, this option will only affect the maximum value. The minimum
value, if not defined on the command line, will be 0. This option can
be useful when graphing router traffic when the \s-1WAN\s0 line uses compression,
and thus the throughput may be higher than the \s-1WAN\s0 line speed.
.PP
[\fB\-N\fR|\fB\-\-no\-gridfit\fR]
.PP
In order to avoid anti-aliasing blurring effects RRDtool snaps
points to device resolution pixels, this results in a crisper
appearance. If this is not to your liking, you can use this switch
to turn this behavior off.
.PP
Grid-fitting is turned off for \s-1PDF\s0, \s-1EPS\s0, \s-1SVG\s0 output by default.
.SS "X\-Axis"
.IX Subsection "X-Axis"
[\fB\-x\fR|\fB\-\-x\-grid\fR \fI\s-1GTM\s0\fR\fB:\fR\fI\s-1GST\s0\fR\fB:\fR\fI\s-1MTM\s0\fR\fB:\fR\fI\s-1MST\s0\fR\fB:\fR\fI\s-1LTM\s0\fR\fB:\fR\fI\s-1LST\s0\fR\fB:\fR\fI\s-1LPR\s0\fR\fB:\fR\fI\s-1LFM\s0\fR]
.PP
[\fB\-x\fR|\fB\-\-x\-grid\fR \fBnone\fR]
.PP
The x\-axis label is quite complex to configure. If you don't have
very special needs it is probably best to rely on the auto configuration
to get this right. You can specify the string \f(CW\*(C`none\*(C'\fR to suppress the grid
and labels altogether.
.PP
The grid is defined by specifying a certain amount of time in the \fI?TM\fR
positions. You can choose from \f(CW\*(C`SECOND\*(C'\fR, \f(CW\*(C`MINUTE\*(C'\fR, \f(CW\*(C`HOUR\*(C'\fR, \f(CW\*(C`DAY\*(C'\fR,
\&\f(CW\*(C`WEEK\*(C'\fR, \f(CW\*(C`MONTH\*(C'\fR or \f(CW\*(C`YEAR\*(C'\fR. Then you define how many of these should
pass between each line or label.  This pair (\fI?TM:?ST\fR) needs to be
specified for the base grid (\fIG??\fR), the major grid (\fIM??\fR) and the
labels (\fIL??\fR). For the labels you also must define a precision
in \fI\s-1LPR\s0\fR and a \fIstrftime\fR format string in \fI\s-1LFM\s0\fR.  \fI\s-1LPR\s0\fR defines
where each label will be placed. If it is zero, the label will be
placed right under the corresponding line (useful for hours, dates
etcetera).  If you specify a number of seconds here the label is
centered on this interval (useful for Monday, January etcetera).
.PP
.Vb 1
\& \-\-x\-grid MINUTE:10:HOUR:1:HOUR:4:0:%X
.Ve
.PP
This places grid lines every 10 minutes, major grid lines every hour,
and labels every 4 hours. The labels are placed under the major grid
lines as they specify exactly that time.
.PP
.Vb 1
\& \-\-x\-grid HOUR:8:DAY:1:DAY:1:86400:%A
.Ve
.PP
This places grid lines every 8 hours, major grid lines and labels
each day. The labels are placed exactly between two major grid lines
as they specify the complete day and not just midnight.
.SS "Y\-Axis"
.IX Subsection "Y-Axis"
[\fB\-y\fR|\fB\-\-y\-grid\fR \fIgrid step\fR\fB:\fR\fIlabel factor\fR]
.PP
[\fB\-y\fR|\fB\-\-y\-grid\fR \fBnone\fR]
.PP
Y\-axis grid lines appear at each \fIgrid step\fR interval.  Labels are
placed every \fIlabel factor\fR lines.  You can specify \f(CW\*(C`\-y none\*(C'\fR to
suppress the grid and labels altogether.  The default for this option is
to automatically select sensible values.
.PP
If you have set \-\-y\-grid to 'none' not only the labels get suppressed, also
the space reserved for the labels is removed. You can still add space
manually if you use the \-\-units\-length command to explicitly reserve space.
.PP
[\fB\-Y\fR|\fB\-\-alt\-y\-grid\fR]
.PP
Place the Y grid dynamically based on the graph's Y range. The algorithm
ensures that you always have a grid, that there are enough but not too many
grid lines, and that the grid is metric. That is the grid lines are placed
every 1, 2, 5 or 10 units. This parameter will also ensure that you get
enough decimals displayed even if your graph goes from 69.998 to 70.001. 
(contributed by Sasha Mikheev).
.PP
[\fB\-o\fR|\fB\-\-logarithmic\fR]
.PP
Logarithmic y\-axis scaling.
.PP
[\fB\-X\fR|\fB\-\-units\-exponent\fR \fIvalue\fR]
.PP
This sets the 10**exponent scaling of the y\-axis values. Normally,
values will be scaled to the appropriate units (k, M, etc.).  However,
you may wish to display units always in k (Kilo, 10e3) even if the data
is in the M (Mega, 10e6) range, for instance. Value should be an
integer which is a multiple of 3 between \-18 and 18 inclusively.  It is
the exponent on the units you wish to use. For example, use 3 to
display the y\-axis values in k (Kilo, 10e3, thousands), use \-6 to
display the y\-axis values in u (Micro, 10e\-6, millionths).  Use a value
of 0 to prevent any scaling of the y\-axis values.
.PP
This option is very effective at confusing the heck out of the default
RRDtool autoscaling function and grid painter. If RRDtool detects that it is not
successful in labeling the graph under the given circumstances, it will switch
to the more robust \fB\-\-alt\-y\-grid\fR mode.
.PP
[\fB\-L\fR|\fB\-\-units\-length\fR \fIvalue\fR]
.PP
How many digits should RRDtool assume the y\-axis labels to be? You
may have to use this option to make enough space once you start
fiddling with the y\-axis labeling.
.PP
[\fB\-\-units=si\fR]
.PP
With this option y\-axis values on logarithmic graphs will be scaled to 
the appropriate units (k, M, etc.) instead of using exponential notation.
Note that for linear graphs, \s-1SI\s0 notation is used by default.
.SS "Right Y Axis"
.IX Subsection "Right Y Axis"
[\fB\-\-right\-axis\fR \fIscale\fR\fB:\fR\fIshift\fR]
[\fB\-\-right\-axis\-label\fR \fIlabel\fR]
.PP
A second axis will be drawn to the right of the graph. It is tied to the
left axis via the scale and shift parameters. You can also define a label
for the right axis.
.PP
[\fB\-\-right\-axis\-format\fR \fIformat-string\fR]
.PP
By default the format of the axis labels gets determined automatically. If
you want to do this your self, use this option with the same \f(CW%lf\fR arguments
you know from the \s-1PRINT\s0 and \s-1GPRINT\s0 commands.
.SS "Legend"
.IX Subsection "Legend"
[\fB\-g\fR|\fB\-\-no\-legend\fR]
.PP
Suppress generation of the legend; only render the graph.
.PP
[\fB\-F\fR|\fB\-\-force\-rules\-legend\fR]
.PP
Force the generation of \s-1HRULE\s0 and \s-1VRULE\s0 legends even if those \s-1HRULE\s0 or
\&\s-1VRULE\s0 will not be drawn because out of graph boundaries (mimics
behavior of pre 1.0.42 versions).
.PP
[\fB\-\-legend\-position\fR=(north|south|west|east)]
.PP
Place the legend at the given side of the graph. The default is south.
In west or east position it is necessary to add line breaks manually.
.PP
[\fB\-\-legend\-direction\fR=(topdown|bottomup)]
.PP
Place the legend items in the given vertical order. The default is topdown.
Using bottomup the legend items appear in the same vertical order as a
stack of lines or areas.
.SS "Miscellaneous"
.IX Subsection "Miscellaneous"
[\fB\-z\fR|\fB\-\-lazy\fR]
.PP
Only generate the graph if the current graph is out of date or not existent.
Note, that all the calculations will happen regardless so that the output of
\&\s-1PRINT\s0 and graphv will be complete regardless. Note that the behavior of
lazy in this regard has seen several changes over time. The only thing you
can really rely on before RRDtool 1.3.7 is that lazy will not generate the
graph when it is already there and up to date, and also that it will output
the size of the graph.
.PP
[\fB\-\-daemon\fR \fIaddress\fR]
.PP
Address of the rrdcached daemon. If specified, a \f(CW\*(C`flush\*(C'\fR command is sent
to the server before reading the \s-1RRD\s0 files. This allows the graph to contain
fresh data even if the daemon is configured to cache values for a long time.
For a list of accepted formats, see the \fB\-l\fR option in the rrdcached manual.
.PP
.Vb 1
\& rrdtool graph [...] \-\-daemon unix:/var/run/rrdcached.sock [...]
.Ve
.PP
[\fB\-f\fR|\fB\-\-imginfo\fR \fIprintfstr\fR]
.PP
After the image has been created, the graph function uses printf
together with this format string to create output similar to the \s-1PRINT\s0
function, only that the printf function is supplied with the parameters
\&\fIfilename\fR, \fIxsize\fR and \fIysize\fR. In order to generate an \fB\s-1IMG\s0\fR tag
suitable for including the graph into a web page, the command line
would look like this:
.PP
.Vb 1
\& \-\-imginfo \*(Aq<IMG SRC="/img/%s" WIDTH="%lu" HEIGHT="%lu" ALT="Demo">\*(Aq
.Ve
.PP
[\fB\-c\fR|\fB\-\-color\fR \fI\s-1COLORTAG\s0\fR#\fIrrggbb\fR[\fIaa\fR]]
.PP
Override the default colors for the standard elements of the graph. The
\&\fI\s-1COLORTAG\s0\fR is one of \f(CW\*(C`BACK\*(C'\fR background, \f(CW\*(C`CANVAS\*(C'\fR for the background of
the actual graph, \f(CW\*(C`SHADEA\*(C'\fR for the left and top border, \f(CW\*(C`SHADEB\*(C'\fR for the
right and bottom border, \f(CW\*(C`GRID\*(C'\fR, \f(CW\*(C`MGRID\*(C'\fR for the major grid, \f(CW\*(C`FONT\*(C'\fR for
the color of the font, \f(CW\*(C`AXIS\*(C'\fR for the axis of the graph, \f(CW\*(C`FRAME\*(C'\fR for the
line around the color spots, and finally \f(CW\*(C`ARROW\*(C'\fR for the arrow head pointing
up and forward. Each color is composed out of three hexadecimal numbers
specifying its rgb color component (00 is off, \s-1FF\s0 is maximum) of red, green
and blue. Optionally you may add another hexadecimal number specifying the
transparency (\s-1FF\s0 is solid). You may set this option several times to alter
multiple defaults.
.PP
A green arrow is made by: \f(CW\*(C`\-\-color ARROW#00FF00\*(C'\fR
.PP
[\fB\-\-grid\-dash\fR \fIon\fR\fB:\fR\fIoff\fR]
.PP
by default the grid is drawn in a 1 on, 1 off pattern. With this option you can set this yourself
.PP
.Vb 1
\& \-\-grid\-dash 1:3    for a dot grid
\& 
\& \-\-grid\-dash 1:0    for uninterrupted grid lines
.Ve
.PP
[\fB\-\-border\fR \fIwidth\fR]]
.PP
Width in pixels for the 3d border drawn around the image. Default 2, 0
disables the border. See \f(CW\*(C`SHADEA\*(C'\fR and \f(CW\*(C`SHADEB\*(C'\fR above for setting the border
color.
.PP
[\fB\-\-dynamic\-labels\fR]
.PP
Pick the shape of the color marker next to the label according to the element drawn on the graph.
.PP
[\fB\-m\fR|\fB\-\-zoom\fR \fIfactor\fR]
.PP
Zoom the graphics by the given amount. The factor must be > 0
.PP
[\fB\-n\fR|\fB\-\-font\fR \fI\s-1FONTTAG\s0\fR\fB:\fR\fIsize\fR\fB:\fR[\fIfont\fR]]
.PP
This lets you customize which font to use for the various text elements on
the \s-1RRD\s0 graphs. \f(CW\*(C`DEFAULT\*(C'\fR sets the default value for all elements, \f(CW\*(C`TITLE\*(C'\fR
for the title, \f(CW\*(C`AXIS\*(C'\fR for the axis labels, \f(CW\*(C`UNIT\*(C'\fR for the vertical unit
label, \f(CW\*(C`LEGEND\*(C'\fR for the graph legend, \f(CW\*(C`WATERMARK\*(C'\fR for the watermark on the
edge of the graph.
.PP
Use Times for the title: \f(CW\*(C`\-\-font TITLE:13:Times\*(C'\fR
.PP
Note that you need to quote the argument to \fB\-\-font\fR if the font-name
contains whitespace:
\&\-\-font \*(L"TITLE:13:Some Font\*(R"
.PP
If you do not give a font string you can modify just the size of the default font:
\&\f(CW\*(C`\-\-font TITLE:13:\*(C'\fR.
.PP
If you specify the size 0 then you can modify just the font without touching
the size. This is especially useful for altering the default font without
resetting the default fontsizes: \f(CW\*(C`\-\-font DEFAULT:0:Courier\*(C'\fR.
.PP
RRDtool comes with a preset default font. You can set the environment
variable \f(CW\*(C`RRD_DEFAULT_FONT\*(C'\fR if you want to change this.
.PP
RRDtool uses Pango for its font handling. This means you can to use
the full Pango syntax when selecting your font:
.PP
The font name has the form "[\fIFAMILY-LIST\fR] [\fISTYLE-OPTIONS\fR] [\fI\s-1SIZE\s0\fR]",
where \fIFAMILY-LIST\fR is a comma separated list of families optionally
terminated by a comma, \fI\s-1STYLE_OPTIONS\s0\fR is a whitespace separated list of
words where each \s-1WORD\s0 describes one of style, variant, weight, stretch, or
gravity, and \fI\s-1SIZE\s0\fR is a decimal number (size in points) or optionally
followed by the unit modifier \*(L"px\*(R" for absolute size. Any one of the options
may be absent.
.PP
[\fB\-R\fR|\fB\-\-font\-render\-mode\fR {\fBnormal\fR,\fBlight\fR,\fBmono\fR}]
.PP
There are 3 font render modes:
.PP
\&\fBnormal\fR: Full Hinting and Anti-aliasing (default)
.PP
\&\fBlight\fR: Slight Hinting and Anti-aliasing
.PP
\&\fBmono\fR: Full Hinting and \s-1NO\s0 Anti-aliasing
.PP
[\fB\-B\fR|\fB\-\-font\-smoothing\-threshold\fR \fIsize\fR]
.PP
(this gets ignored in 1.3 for now!)
.PP
This specifies the largest font size which will be rendered
bitmapped, that is, without any font smoothing. By default,
no text is rendered bitmapped.
.PP
[\fB\-P\fR|\fB\-\-pango\-markup\fR]
.PP
All text in RRDtool is rendered using Pango. With the \fB\-\-pango\-markup\fR option, all
text will be processed by pango markup. This allows to embed some simple html
like markup tags using
.PP
.Vb 1
\& <span key="value">text</span>
.Ve
.PP
Apart from the verbose syntax, there are also the following short tags available.
.PP
.Vb 9
\& b     Bold
\& big   Makes font relatively larger, equivalent to <span size="larger">
\& i     Italic
\& s     Strikethrough
\& sub   Subscript
\& sup   Superscript
\& small Makes font relatively smaller, equivalent to <span size="smaller">
\& tt    Monospace font
\& u     Underline
.Ve
.PP
More details on <http://developer.gnome.org/doc/API/2.0/pango/PangoMarkupFormat.html>.
.PP
[\fB\-G\fR|\fB\-\-graph\-render\-mode\fR {\fBnormal\fR,\fBmono\fR}]
.PP
There are 2 render modes:
.PP
\&\fBnormal\fR: Graphs are fully Anti-aliased (default)
.PP
\&\fBmono\fR: No Anti-aliasing
.PP
[\fB\-E\fR|\fB\-\-slope\-mode\fR]
.PP
RRDtool graphs are composed of stair case curves by default. This is in line with
the way RRDtool calculates its data. Some people favor a more 'organic' look
for their graphs even though it is not all that true.
.PP
[\fB\-a\fR|\fB\-\-imgformat\fR \fB\s-1PNG\s0\fR|\fB\s-1SVG\s0\fR|\fB\s-1EPS\s0\fR|\fB\s-1PDF\s0\fR]
.PP
Image format for the generated graph. For the vector formats you can
choose among the standard Postscript fonts Courier-Bold,
Courier-BoldOblique, Courier-Oblique, Courier, Helvetica-Bold,
Helvetica-BoldOblique, Helvetica-Oblique, Helvetica, Symbol,
Times-Bold, Times-BoldItalic, Times-Italic, Times-Roman, and ZapfDingbats.
.PP
[\fB\-i\fR|\fB\-\-interlaced\fR]
.PP
(this gets ignored in 1.3 for now!)
.PP
If images are interlaced they become visible on browsers more quickly.
.PP
[\fB\-T\fR|\fB\-\-tabwidth\fR \fIvalue\fR]
.PP
By default the tab-width is 40 pixels, use this option to change it.
.PP
[\fB\-b\fR|\fB\-\-base\fR \fIvalue\fR]
.PP
If you are graphing memory (and \s-1NOT\s0 network traffic) this switch
should be set to 1024 so that one Kb is 1024 byte. For traffic
measurement, 1 kb/s is 1000 b/s.
.PP
[\fB\-W\fR|\fB\-\-watermark\fR \fIstring\fR]
.PP
Adds the given string as a watermark, horizontally centered, at the bottom 
of the graph.
.SS "Data and variables"
.IX Subsection "Data and variables"
\&\fB\s-1DEF:\s0\fR\fIvname\fR\fB=\fR\fIrrdfile\fR\fB:\fR\fIds-name\fR\fB:\fR\fI\s-1CF\s0\fR[\fB:step=\fR\fIstep\fR][\fB:start=\fR\fItime\fR][\fB:end=\fR\fItime\fR]
.PP
\&\fB\s-1CDEF:\s0\fR\fIvname\fR\fB=\fR\fI\s-1RPN\s0 expression\fR
.PP
\&\fB\s-1VDEF:\s0\fR\fIvname\fR\fB=\fR\fI\s-1RPN\s0 expression\fR
.PP
You need at least one \fB\s-1DEF\s0\fR and one \fB\s-1LINE\s0\fR, \fB\s-1AREA\s0\fR, \fB\s-1GPRINT\s0\fR, \fB\s-1PRINT\s0\fR
statement to generate anything useful.
.PP
See rrdgraph_data and rrdgraph_rpn for the exact format.
.PP
\&\s-1NOTE:\s0 \fBGraph and print elements\fR
.PP
You need at least one graph element to generate an image and/or
at least one print statement to generate a report.
See rrdgraph_graph for the exact format.
.SS "graphv"
.IX Subsection "graphv"
Calling RRDtool with the graphv option will return information in the
RRDtool info format. On the command line this means that all output will be
in key=value format. When used from the Perl and Ruby bindings a hash
pointer will be returned from the call.
.PP
When the filename '\-' is given, the contents of the graph itself will also
be returned through this interface (hash key 'image'). On the command line
the output will look like this:
.PP
.Vb 10
\& print[0] = "0.020833"
\& print[1] = "0.0440833"
\& graph_left = 51
\& graph_top = 22
\& graph_width = 400
\& graph_height = 100
\& graph_start = 1232908800
\& graph_end = 1232914200
\& image_width = 481
\& image_height = 154
\& value_min = 0.0000000000e+00
\& value_max = 4.0000000000e\-02
\& image = BLOB_SIZE:8196
\& [... 8196 bytes of image data ...]
.Ve
.PP
There is more information returned than in the standard interface.
Especially the 'graph_*' keys are new. They help applications that want to
know what is where on the graph.
.SH "ENVIRONMENT VARIABLES"
.IX Header "ENVIRONMENT VARIABLES"
The following environment variables may be used to change the behavior of
\&\f(CW\*(C`rrdtool\ graph\*(C'\fR:
.IP "\fB\s-1RRDCACHED_ADDRESS\s0\fR" 4
.IX Item "RRDCACHED_ADDRESS"
If this environment variable is set it will have the same effect as specifying
the \f(CW\*(C`\-\-daemon\*(C'\fR option on the command line. If both are present, the command
line argument takes precedence.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
rrdgraph gives an overview of how \fBrrdtool graph\fR works.
rrdgraph_data describes \fB\s-1DEF\s0\fR,\fB\s-1CDEF\s0\fR and \fB\s-1VDEF\s0\fR in detail.
rrdgraph_rpn describes the \fB\s-1RPN\s0\fR language used in the \fB?DEF\fR statements.
rrdgraph_graph page describes all of the graph and print functions.
.PP
Make sure to read rrdgraph_examples for tips&tricks.
.SH "AUTHOR"
.IX Header "AUTHOR"
Program by Tobias Oetiker <tobi@oetiker.ch>
.PP
This manual page by Alex van den Bogaerdt <alex@vandenbogaerdt.nl>
with corrections and/or additions by several people
