.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "RRDGRAPH_EXAMPLES 1"
.TH RRDGRAPH_EXAMPLES 1 "2009-02-21" "1.4.7" "rrdtool"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
rrdgraph_examples \- Examples for rrdtool graph
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBrrdtool graph /home/httpd/html/test.png \-\-img\-format \s-1PNG\s0\fR
.PP
followed by any of the examples below
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
For your convenience some of the commands are explained here
by using detailed examples. They are not always cut-and-paste
ready because comments are intermixed with the examples.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.SS "Data with multiple resolutions"
.IX Subsection "Data with multiple resolutions"
.Vb 7
\&    \-\-end now \-\-start end\-120000s \-\-width 400
\&    DEF:ds0a=/home/rrdtool/data/router1.rrd:ds0:AVERAGE
\&    DEF:ds0b=/home/rrdtool/data/router1.rrd:ds0:AVERAGE:step=1800
\&    DEF:ds0c=/home/rrdtool/data/router1.rrd:ds0:AVERAGE:step=7200
\&    LINE1:ds0a#0000FF:"default resolution\el"
\&    LINE1:ds0b#00CCFF:"resolution 1800 seconds per interval\el"
\&    LINE1:ds0c#FF00FF:"resolution 7200 seconds per interval\el"
.Ve
.SS "Nicely formatted legend section"
.IX Subsection "Nicely formatted legend section"
.Vb 10
\&    DEF:ds0=/home/rrdtool/data/router1.rrd:ds0:AVERAGE
\&    DEF:ds1=/home/rrdtool/data/router1.rrd:ds1:AVERAGE
\&    VDEF:ds0max=ds0,MAXIMUM
\&    VDEF:ds0avg=ds0,AVERAGE
\&    VDEF:ds0min=ds0,MINIMUM
\&    VDEF:ds0pct=ds0,95,PERCENT
\&    VDEF:ds1max=ds1,MAXIMUM
\&    VDEF:ds1avg=ds1,AVERAGE
\&    VDEF:ds1min=ds1,MINIMUM
\&    VDEF:ds1pct=ds1,95,PERCENT
.Ve
.PP
Note: consolidation occurs here.
.PP
.Vb 2
\&    CDEF:ds0bits=ds0,8,*
\&    CDEF:ds1bits=ds1,8,*
.Ve
.PP
Note: 10 spaces to move text to the right
.PP
.Vb 1
\&    COMMENT:"          "
.Ve
.PP
Note: the column titles have to be as wide as the columns
.PP
.Vb 3
\&    COMMENT:"Maximum    "
\&    COMMENT:"Average    "
\&    COMMENT:"Minimum    "
\&
\&    COMMENT:"95th percentile\el"
\&    AREA:ds0bits#00C000:"Inbound "
\&    GPRINT:ds0max:"%6.2lf %Sbps"
\&    GPRINT:ds0avg:"%6.2lf %Sbps"
\&    GPRINT:ds0min:"%6.2lf %Sbps"
\&    GPRINT:ds0pct:"%6.2lf %Sbps\el"
\&    LINE1:ds1bits#0000FF:"Outbound"
\&    GPRINT:ds1max:"%6.2lf %Sbps"
\&    GPRINT:ds1avg:"%6.2lf %Sbps"
\&    GPRINT:ds1min:"%6.2lf %Sbps"
\&    GPRINT:ds1pct:"%6.2lf %Sbps\el"
.Ve
.SS "Offsetting a line on the y\-axis"
.IX Subsection "Offsetting a line on the y-axis"
Depending on your needs you can do this in two ways:
.IP "\(bu" 4
Offset the data, then graph this
.Sp
.Vb 1
\&    DEF:mydata=my.rrd:ds:AVERAGE
.Ve
.Sp
Note: this will also influence any other command that uses \*(L"data\*(R"
.Sp
.Vb 2
\&    CDEF:data=mydata,100,+
\&    LINE1:data#FF0000:"Data with offset"
.Ve
.IP "\(bu" 4
Graph the original data, with an offset
.Sp
.Vb 1
\&    DEF:mydata=my.rrd:ds:AVERAGE
.Ve
.Sp
Note: no color in the first line so it is not visible
.Sp
.Vb 1
\&    LINE1:100
.Ve
.Sp
Note: the second line gets stacked on top of the first one
.Sp
.Vb 1
\&    LINE1:data#FF0000:"Data with offset":STACK
.Ve
.SS "Drawing dashed lines"
.IX Subsection "Drawing dashed lines"
Also works for \s-1HRULE\s0 and \s-1VRULE\s0
.IP "\(bu" 4
default style: \- \- \- \- \-
    LINE1:data#FF0000:\*(L"dashed line\*(R":dashes
.IP "\(bu" 4
more fancy style with offset: \- \-  \-\-\- \-  \-\-\- \-
    LINE1:data#FF0000:\*(L"another dashed line\*(R":dashes=15,5,5,10:dash\-offset=10
.SS "Time ranges"
.IX Subsection "Time ranges"
.Vb 6
\&    Last four weeks: \-\-start end\-4w \-\-end 00:00
\&    January 2001:    \-\-start 20010101 \-\-end start+31d
\&    January 2001:    \-\-start 20010101 \-\-end 20010201
\&    Last hour:       \-\-start end\-1h
\&    Last 24 hours:   <nothing at all>
\&    Yesterday:       \-\-end 00:00
.Ve
.SS "Viewing the current and previous week together"
.IX Subsection "Viewing the current and previous week together"
.Vb 3
\&    \-\-end now \-\-start end\-1w
\&    DEF:thisweek=router.rrd:ds0:AVERAGE
\&    DEF:lastweek=router.rrd:ds0:AVERAGE:end=now\-1w:start=end\-1w
.Ve
.PP
Shift the data forward by one week (604800 seconds)
.PP
.Vb 4
\&    SHIFT:lastweek:604800
\&    [ more of the usual VDEF and CDEF stuff if you like ]
\&    AREA:lastweek#0000FF:Last\e week
\&    LINE1:thisweek#FF0000:This\e week
.Ve
.SS "Aberrant Behaviour Detection"
.IX Subsection "Aberrant Behaviour Detection"
If the specialized function \fBRRAs\fR exist for aberrant behavior detection, they
can be used to generate the graph of a time series with confidence bands and
failures.
.PP
.Vb 10
\&   rrdtool graph example.png \e
\&          DEF:obs=monitor.rrd:ifOutOctets:AVERAGE \e
\&          DEF:pred=monitor.rrd:ifOutOctets:HWPREDICT \e
\&          DEF:dev=monitor.rrd:ifOutOctets:DEVPREDICT \e
\&          DEF:fail=monitor.rrd:ifOutOctets:FAILURES \e
\&          TICK:fail#ffffa0:1.0:"Failures\e: Average bits out" \e
\&          CDEF:scaledobs=obs,8,* \e
\&          CDEF:upper=pred,dev,2,*,+ \e
\&          CDEF:lower=pred,dev,2,*,\- \e
\&          CDEF:scaledupper=upper,8,* \e
\&          CDEF:scaledlower=lower,8,* \e
\&          LINE2:scaledobs#0000ff:"Average bits out" \e
\&          LINE1:scaledupper#ff0000:"Upper Confidence Bound: Average bits out" \e
\&          LINE1:scaledlower#ff0000:"Lower Confidence Bound: Average bits out"
.Ve
.PP
This example generates a graph of the data series in blue (\s-1LINE2\s0 with the scaledobs
virtual data source), confidence bounds in red (scaledupper and scaledlower virtual
data sources), and potential failures (i.e. potential aberrant aberrant behavior)
marked by vertical yellow lines (the fail data source).
.PP
The raw data comes from an \s-1AVERAGE\s0 \fB\s-1RRA\s0\fR, the finest resolution of the observed
time series (one consolidated data point per primary data point). The predicted
(or smoothed) values are stored in the \s-1HWPREDICT\s0 \fB\s-1RRA\s0\fR. The predicted deviations
(think standard deviation) values are stored in the \s-1DEVPREDICT\s0 \fB\s-1RRA\s0\fR. Finally,
the \s-1FAILURES\s0 \fB\s-1RRA\s0\fR contains indicators, with 1 denoting a potential failure.
.PP
All of the data is rescaled to bits (instead of Octets) by multiplying by 8.
The confidence bounds are computed by an offset of 2 deviations both above
and below the predicted values (the CDEFs upper and lower). Vertical lines
indicated potential failures are graphed via the \s-1TICK\s0 graph element, which
converts non-zero values in an \fB\s-1RRA\s0\fR into tick marks. Here an axis-fraction
argument of 1.0 means the tick marks span the entire y\-axis, and hence become
vertical lines on the graph.
.PP
The choice of 2 deviations (a scaling factor) matches the default used internally
by the \s-1FAILURES\s0 \fB\s-1RRA\s0\fR. If the internal value is changed (see rrdtune), this
graphing command should be changed to be consistent.
.PP
\fIA note on data reduction:\fR
.IX Subsection "A note on data reduction:"
.PP
The \fBrrdtool\fR \fIgraph\fR command is designed to plot data at a specified temporal
resolution, regardless of the actually resolution of the data in the \s-1RRD\s0 file.
This can present a problem for the specialized consolidation functions which
maintain a one-to-one mapping between primary data points and consolidated
data points. If a graph insists on viewing the contents of these \fBRRAs\fR on a
coarser temporal scale, the \fIgraph\fR command tries to do something intelligent,
but the confidence bands and failures no longer have the same meaning and may
be misleading.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
rrdgraph gives an overview of how \fBrrdtool graph\fR works.
rrdgraph_data describes \fB\s-1DEF\s0\fR,\fB\s-1CDEF\s0\fR and \fB\s-1VDEF\s0\fR in detail.
rrdgraph_rpn describes the \fB\s-1RPN\s0\fR language used in the \fBxDEF\fR statements.
rrdgraph_graph page describes all the graph and print functions.
.SH "AUTHOR"
.IX Header "AUTHOR"
Program by Tobias Oetiker <tobi@oetiker.ch>
.PP
This manual page by Alex van den Bogaerdt <alex@vandenbogaerdt.nl>
with corrections and/or additions by several people
