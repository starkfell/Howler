RRDGRAPH_GRAPH(1)                   rrdtool                  RRDGRAPH_GRAPH(1)



NNAAMMEE
       rrdgraph_graph - rrdtool graph command reference

SSYYNNOOPPSSIISS
       PPRRIINNTT::_v_n_a_m_e::_f_o_r_m_a_t

       GGPPRRIINNTT::_v_n_a_m_e::_f_o_r_m_a_t

       CCOOMMMMEENNTT::_t_e_x_t

       VVRRUULLEE::_t_i_m_e##_c_o_l_o_r[::_l_e_g_e_n_d][::ddaasshheess[==_o_n___s[,_o_f_f___s[,_o_n___s,_o_f_f___s]...]][::ddaasshh--ooffffsseett==_o_f_f_s_e_t]]

       HHRRUULLEE::_v_a_l_u_e##_c_o_l_o_r[::_l_e_g_e_n_d][::ddaasshheess[==_o_n___s[,_o_f_f___s[,_o_n___s,_o_f_f___s]...]][::ddaasshh--ooffffsseett==_o_f_f_s_e_t]]

       LLIINNEE[_w_i_d_t_h]::_v_a_l_u_e[##_c_o_l_o_r][::[_l_e_g_e_n_d][::SSTTAACCKK]][::ddaasshheess[==_o_n___s[,_o_f_f___s[,_o_n___s,_o_f_f___s]...]][::ddaasshh--ooffffsseett==_o_f_f_s_e_t]]

       AARREEAA::_v_a_l_u_e[##_c_o_l_o_r][::[_l_e_g_e_n_d][::SSTTAACCKK]]

       TTIICCKK::_v_n_a_m_e##_r_r_g_g_b_b[_a_a][::_f_r_a_c_t_i_o_n[::_l_e_g_e_n_d]]

       SSHHIIFFTT::_v_n_a_m_e::_o_f_f_s_e_t

       TTEEXXTTAALLIIGGNN::{lleefftt|rriigghhtt|jjuussttiiffiieedd|cceenntteerr}

       PPRRIINNTT::_v_n_a_m_e::_C_F::_f_o_r_m_a_t (deprecated)

       GGPPRRIINNTT::_v_n_a_m_e::_C_F::_f_o_r_m_a_t (deprecated)

       SSTTAACCKK::_v_n_a_m_e##_c_o_l_o_r[::_l_e_g_e_n_d] (deprecated)

DDEESSCCRRIIPPTTIIOONN
       These instructions allow you to generate your image or report.  If you
       don't use any graph elements, no graph is generated.  Similarly, no
       report is generated if you don't use print options.

   PPRRIINNTT
       _PP_RR_II_NN_TT_::_v_n_a_m_e_::_f_o_r_m_a_t_[_::_ss_tt_rr_ff_tt_ii_mm_ee_]

       Depending on the context, either the value component or the time
       component of a VVDDEEFF is printed using _f_o_r_m_a_t. It is an error to specify
       a _v_n_a_m_e generated by a DDEEFF or CCDDEEFF.

       Any text in _f_o_r_m_a_t is printed literally with one exception: The percent
       character introduces a formatter string. This string can be:

       For printing values:

       %%%%  just prints a literal '%' character

       %%##..##llee
           prints numbers like 1.2346e+04. The optional integers # denote
           field width and decimal precision.

       %%##..##llff
           prints numbers like 12345.6789, with optional field width and
           precision.

       %%ss  place this after %%llee, %%llff or %%llgg. This will be replaced by the
           appropriate SI magnitude unit and the value will be scaled
           accordingly (123456 -> 123.456 k).

       %%SS  is similar to %%ss. It does, however, use a previously defined
           magnitude unit. If there is no such unit yet, it tries to define
           one (just like %%ss) unless the value is zero, in which case the
           magnitude unit stays undefined. Thus, formatter strings using %%SS
           and no %%ss will all use the same magnitude unit except for zero
           values.

       If you PRINT a VDEF value, you can also print the time associated with
       it by appending the string ::ssttrrffttiimmee to the format. Note that RRDtool
       uses the strftime function of your OSs C library. This means that the
       conversion specifier may vary. Check the manual page if you are
       uncertain. The following is a list of conversion specifiers usually
       supported across the board.

       %%aa  The abbreviated weekday name according to the current locale.

       %%AA  The full weekday name according to the current locale.

       %%bb  The abbreviated month name according to the current locale.

       %%BB  The full month name according to the current locale.

       %%cc  The preferred date and time representation for the current locale.

       %%dd  The day of the month as a decimal number (range 01 to 31).

       %%HH  The hour as a decimal number using a 24-hour clock (range 00 to
           23).

       %%II  The hour as a decimal number using a 12-hour clock (range 01 to
           12).

       %%jj  The day of the year as a decimal number (range 001 to 366).

       %%mm  The month as a decimal number (range 01 to 12).

       %%MM  The minute as a decimal number (range 00 to 59).

       %%pp  Either `AM' or `PM' according to the given time value, or the
           corresponding strings for the current locale.  Noon is treated as
           `pm' and midnight as `am'.  Note that in many locales and `pm'
           notation is unsupported and in such cases %p will return an empty
           string.

       %%ss  The second as a decimal number (range 00 to 61).

       %%SS  The seconds since the epoch (1.1.1970) (libc dependent non
           standard!)

       %%UU  The  week  number  of  the current year as a decimal number, range
           00 to 53, starting with the first Sunday as the first day of week
           01. See also %V and %W.

       %%VV  The ISO 8601:1988 week number of the current year as a decimal
           number, range 01 to  53,  where week  1 is the first week that has
           at least 4 days in the current year, and with Monday as the first
           day of the week. See also %U and %W.

       %%ww  The day of the week as a decimal, range 0 to 6, Sunday being 0.
           See also %u.

       %%WW  The week number of the current year as a decimal number, range 00
           to  53,  starting  with  the first Monday as the first day of week
           01.

       %%xx  The preferred date representation for the current locale without
           the time.

       %%XX  The preferred time representation for the current locale without
           the date.

       %%yy  The year as a decimal number without a century (range 00 to 99).

       %%YY  The year as a decimal number including the century.

       %%ZZ  The time zone or name or abbreviation.

       %%%%  A literal `%' character.

       _PP_RR_II_NN_TT_::_v_n_a_m_e_::_C_F_::_f_o_r_m_a_t

       _D_e_p_r_e_c_a_t_e_d_. _U_s_e _t_h_e _n_e_w _f_o_r_m _o_f _t_h_i_s _c_o_m_m_a_n_d _i_n _n_e_w _s_c_r_i_p_t_s_.  The first
       form of this command is to be used with CCDDEEFF _v_n_a_m_es.

   GGRRAAPPHH
       _GG_PP_RR_II_NN_TT_::_v_n_a_m_e_::_f_o_r_m_a_t

       This is the same as "PRINT", but printed inside the graph.

       _GG_PP_RR_II_NN_TT_::_v_n_a_m_e_::_C_F_::_f_o_r_m_a_t

       _D_e_p_r_e_c_a_t_e_d_. _U_s_e _t_h_e _n_e_w _f_o_r_m _o_f _t_h_i_s _c_o_m_m_a_n_d _i_n _n_e_w _s_c_r_i_p_t_s_.  This is
       the same as "PRINT", but printed inside the graph.

       _CC_OO_MM_MM_EE_NN_TT_::_t_e_x_t

       Text is printed literally in the legend section of the graph. Note that
       in RRDtool 1.2 you have to escape colons in COMMENT text in the same
       way you have to escape them in **PPRRIINNTT commands by writing ''\\::''.

       _VV_RR_UU_LL_EE_::_t_i_m_e_##_c_o_l_o_r_[_::_l_e_g_e_n_d_]_[_::_dd_aa_ss_hh_ee_ss_[_==_o_n___s_[_,_o_f_f___s_[_,_o_n___s_,_o_f_f___s_]_._._._]_]_[_::_dd_aa_ss_hh_--_oo_ff_ff_ss_ee_tt_==_o_f_f_s_e_t_]_]

       Draw a vertical line at _t_i_m_e.  Its color is composed from three
       hexadecimal numbers specifying the rgb color components (00 is off, FF
       is maximum) red, green and blue followed by an optional alpha.
       Optionally, a legend box and string is printed in the legend section.
       _t_i_m_e may be a number or a variable from a VVDDEEFF. It is an error to use
       _v_n_a_m_es from DDEEFF or CCDDEEFF here.  Dashed lines can be drawn using the
       ddaasshheess modifier. See LLIINNEE for more details.

       _HH_RR_UU_LL_EE_::_v_a_l_u_e_##_c_o_l_o_r_[_::_l_e_g_e_n_d_]_[_::_dd_aa_ss_hh_ee_ss_[_==_o_n___s_[_,_o_f_f___s_[_,_o_n___s_,_o_f_f___s_]_._._._]_]_[_::_dd_aa_ss_hh_--_oo_ff_ff_ss_ee_tt_==_o_f_f_s_e_t_]_]

       Draw a horizontal line at _v_a_l_u_e.  HRULE acts much like LINE except that
       will have no effect on the scale of the graph. If a HRULE is outside
       the graphing area it will just not be visible.

       _LL_II_NN_EE_[_w_i_d_t_h_]_::_v_a_l_u_e_[_##_c_o_l_o_r_]_[_::_[_l_e_g_e_n_d_]_[_::_SS_TT_AA_CC_KK_]_]_[_::_dd_aa_ss_hh_ee_ss_[_==_o_n___s_[_,_o_f_f___s_[_,_o_n___s_,_o_f_f___s_]_._._._]_]_[_::_dd_aa_ss_hh_--_oo_ff_ff_ss_ee_tt_==_o_f_f_s_e_t_]_]

       Draw a line of the specified width onto the graph. _w_i_d_t_h can be a
       floating point number. If the color is not specified, the drawing is
       done 'invisibly'. This is useful when stacking something else on top of
       this line. Also optional is the legend box and string which will be
       printed in the legend section if specified. The vvaalluuee can be generated
       by DDEEFF, VVDDEEFF, and CCDDEEFF.  If the optional SSTTAACCKK modifier is used, this
       line is stacked on top of the previous element which can be a LLIINNEE or
       an AARREEAA.

       The ddaasshheess modifier enables dashed line style. Without any further
       options a symmetric dashed line with a segment length of 5 pixels will
       be drawn. The dash pattern can be changed if the ddaasshheess== parameter is
       followed by either one value or an even number (1, 2, 4, 6, ...) of
       positive values. Each value provides the length of alternate _o_n___s and
       _o_f_f___s portions of the stroke. The ddaasshh--ooffffsseett parameter specifies an
       _o_f_f_s_e_t into the pattern at which the stroke begins.

       When you do not specify a color, you cannot specify a legend.  Should
       you want to use STACK, use the "LINEx:<value>::STACK" form.

       _AA_RR_EE_AA_::_v_a_l_u_e_[_##_c_o_l_o_r_]_[_::_[_l_e_g_e_n_d_]_[_::_SS_TT_AA_CC_KK_]_]

       See LLIINNEE, however the area between the x-axis and the line will be
       filled.

       _TT_II_CC_KK_::_v_n_a_m_e_##_r_r_g_g_b_b_[_a_a_]_[_::_f_r_a_c_t_i_o_n_[_::_l_e_g_e_n_d_]_]

       Plot a tick mark (a vertical line) for each value of _v_n_a_m_e that is non-
       zero and not *UNKNOWN*. The _f_r_a_c_t_i_o_n argument specifies the length of
       the tick mark as a fraction of the y-axis; the default value is 0.1
       (10% of the axis). Note that the color specification is not optional.
       The TICK marks normally start at the lower edge of the graphing area.
       If the fraction is negative they start at the upper border of the
       graphing area.

       _SS_HH_II_FF_TT_::_v_n_a_m_e_::_o_f_f_s_e_t

       Using this command RRRRDDttooooll will graph the following elements with the
       specified offset.  For instance, you can specify an offset of
       ( 7*24*60*60 = ) 604'800 seconds to "look back" one week. Make sure to
       tell the viewer of your graph you did this ...  As with the other
       graphing elements, you can specify a number or a variable here.

       _TT_EE_XX_TT_AA_LL_II_GG_NN_::_{_ll_ee_ff_tt_|_rr_ii_gg_hh_tt_|_jj_uu_ss_tt_ii_ff_ii_ee_dd_|_cc_ee_nn_tt_ee_rr_}

       Labels are placed below the graph. When they overflow to the left, they
       wrap to the next line. By default, lines are justified left and right.
       The TTEEXXTTAALLIIGGNN function lets you change this default. This is a command
       and not an option, so that you can change the default several times in
       your argument list.

       _SS_TT_AA_CC_KK_::_v_n_a_m_e_##_c_o_l_o_r_[_::_l_e_g_e_n_d_]

       _D_e_p_r_e_c_a_t_e_d_.  _U_s_e _t_h_e _SS_TT_AA_CC_KK _m_o_d_i_f_i_e_r_s _o_n _t_h_e _o_t_h_e_r _c_o_m_m_a_n_d_s _i_n_s_t_e_a_d_!

       SSoommee nnootteess oonn ssttaacckkiinngg

       When stacking, an element is not placed above the X-axis but rather on
       top of the previous element.  There must be something to stack upon.

       You can use an iinnvviissiibbllee LINE or AREA to stacked upon.

       An uunnkknnoowwnn value makes the entire stack unknown from that moment on.
       You don't know where to begin (the unknown value) and therefore do not
       know where to end.

       If you want to make sure you will be displaying a certain variable,
       make sure never to stack upon the unknown value.  Use a CDEF
       instruction with IIFF and UUNN to do so.

NNOOTTEESS oonn lleeggeenndd aarrgguummeennttss
   EEssccaappiinngg tthhee ccoolloonn
       A colon ':' in a _l_e_g_e_n_d argument will mark the end of the legend. To
       enter a ':' as part of a legend, the colon must be escaped with a
       backslash '\:'.  Beware that many environments process backslashes
       themselves, so it may be necessary to write two backslashes in order to
       one being passed onto rrd_graph.

   SSttrriinngg FFoorrmmaattttiinngg
       The text printed below the actual graph can be formatted by appending
       special escape characters at the end of a text. When ever such a
       character occurs, all pending text is pushed onto the graph according
       to the character specified.

       Valid markers are: \\jj for justified, \\ll for left aligned, \\rr for right
       aligned, and \\cc for centered. In the next section there is an example
       showing how to use centered formatting.

       \\nn is a valid alias for \\ll since incomplete parsing in earlier versions
       of RRDtool lead to this behavior and a number of people has been using
       it.

       Normally there are two space characters inserted between every two
       items printed into the graph. The space following a string can be
       suppressed by putting a \\gg at the end of the string. The \\gg also
       ignores any space inside the string if it is at the very end of the
       string. This can be used in connection with %%ss to suppress empty unit
       strings.

        GPRINT:a:MAX:%lf%s\g

       A special case is COMMENT:\\ss which inserts some additional vertical
       space before placing the next row of legends.

       If you want to have left and right aligned legends on the same line use
       COMMENT:\\uu to go one line back like this:

        COMMENT:left\l
        COMMENT:\u
        COMMENT:right\r

       There is also a 'nop' control for situations where you want a string to
       actually end in a backslash character sequence \\..

        COMMENT:OS\2\.

       When using a proportional font in your graph, the tab characters or the
       sequence \\tt will line-up legend elements. Note that the tabs inserted
       are relative to the start of the current legend element!

       Since RRDtool 1.3 is using Pango for rending text, you can use Pango
       markup.  Pango uses the xml ssppaann tags for inline formatting
       instructions.:

       A simple example of a marked-up string might be:

        <span foreground="blue" size="x-large">Blue text</span> is <i>cool</i>!

       The complete list of attributes for the span tag (taken from the pango
       documentation):

       ffoonntt__ddeesscc
           A font description string, such as "Sans Italic 12"; note that any
           other span attributes will override this description. So if you
           have "Sans Italic" and also a style="normal" attribute, you will
           get Sans normal, not italic.

       ffoonntt__ffaammiillyy
           A font family name

       ffaaccee
           Synonym for font_family

       ssiizzee
           Font size in 1024ths of a point, or one of the absolute sizes
           'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large',
           'xx-large', or one of the relative sizes 'smaller' or 'larger'. If
           you want to specify a absolute size, it's usually easier to take
           advantage of the ability to specify a partial font description
           using 'font_desc'; you can use font_desc='12.5' rather than
           size='12800'.

       ssttyyllee
           One of 'normal', 'oblique', 'italic'

       wweeiigghhtt
           One of 'ultralight', 'light', 'normal', 'bold', 'ultrabold',
           'heavy', or a numeric weight

       vvaarriiaanntt
           'normal' or 'smallcaps'

       ssttrreettcchh
           One of 'ultracondensed', 'extracondensed', 'condensed',
           'semicondensed', 'normal', 'semiexpanded', 'expanded',
           'extraexpanded', 'ultraexpanded'

       ffoorreeggrroouunndd
           An RGB color specification such as '#00FF00' or a color name such
           as 'red'

       bbaacckkggrroouunndd
           An RGB color specification such as '#00FF00' or a color name such
           as 'red'

       uunnddeerrlliinnee
           One of 'none', 'single', 'double', 'low', 'error'

       uunnddeerrlliinnee__ccoolloorr
           The color of underlines; an RGB color specification such as
           '#00FF00' or a color name such as 'red'

       rriissee
           Vertical displacement, in 10000ths of an em. Can be negative for
           subscript, positive for superscript.

       ssttrriikkeetthhrroouugghh
           'true' or 'false' whether to strike through the text

       ssttrriikkeetthhrroouugghh__ccoolloorr
           The color of crossed out lines; an RGB color specification such as
           '#00FF00' or a color name such as 'red'

       ffaallllbbaacckk
           'true' or 'false' whether to enable fallback. If disabled, then
           characters will only be used from the closest matching font on the
           system. No fallback will be done to other fonts on the system that
           might contain the characters in the text. Fallback is enabled by
           default. Most applications should not disable fallback.

       llaanngg
           A language code, indicating the text language

       lleetttteerr__ssppaacciinngg
           Inter-letter spacing in 1024ths of a point.

       ggrraavviittyy
           One of 'south', 'east', 'north', 'west', 'auto'.

       ggrraavviittyy__hhiinntt
           One of 'natural', 'strong', 'line'.

       To save you some typing, there are also some shortcuts:

       bb   Bold

       bbiigg Makes font relatively larger, equivalent to <span size="larger">

       ii   Italic

       ss   Strike through

       ssuubb Subscript

       ssuupp Superscript

       ssmmaallll
           Makes font relatively smaller, equivalent to <span size="smaller">

       tttt  Monospace font

       uu   Underline

SSEEEE AALLSSOO
       rrdgraph gives an overview of how rrrrddttooooll ggrraapphh works.  rrdgraph_data
       describes DDEEFF,CCDDEEFF and VVDDEEFF in detail.  rrdgraph_rpn describes the RRPPNN
       language used in the ??DDEEFF statements.  rrdgraph_graph page describes
       all of the graph and print functions.

       Make sure to read rrdgraph_examples for tips&tricks.

AAUUTTHHOORR
       Program by Tobias Oetiker <tobi@oetiker.ch>

       This manual page by Alex van den Bogaerdt <alex@vandenbogaerdt.nl> with
       corrections and/or additions by several people



1.4.7                             2012-01-20                 RRDGRAPH_GRAPH(1)
