#!/usr/bin/perl

# Copyright (c) 2005 Darren Spruell <sancho@sancho2k.net>
# All rights reserved.

################################################################################
# This script is used to compare the version and signature level of the
# currently running clamd daemon with the latest available versions listed in
# the TXT record for current.cvd.clamav.net.
#
# In order to use this script, you might need to make the following adjustments:
#  - Set the "use lib" path correctly.
#  - Set the path to your clamd binary in $clamd_cmd.
#  - Uncomment one of the $dnstxt_cmd variables, depending on whether you want
#    to use BIND or djbdns (i.e. dig or dnstxt) to look up DNS TXT records.
################################################################################

use lib "/usr/lib64/nagios/plugins";                     # Nagios plugins home
use utils qw(%ERRORS &print_revision &support &usage);
use Getopt::Long qw(:config no_ignore_case bundling);
use File::Basename;

my $clamd_cmd   = "/usr/sbin/clamd";
my $dnstxt_cmd = "dig txt current.cvd.clamav.net +short";	# Use with BIND
#my $dnstxt_cmd = "dnstxt current.cvd.clamav.net";		# Use with djbdns

# Leave the rest of this alone:
my $prog_name  = basename $0;
my $prog_ver   = "1.0";

my $warn_val = 1;  # Default - override with -w arg
my $crit_val = 2;  # Default - override with -c arg
my $help_val = 0;  # Off unless -h arg
my $verb_val = 0;  # Off unless -v arg
my $vers_val = 0;  # Off unless -V arg

# Gives us a way to print out verbose debug information to the screen when user
# passes in a -v argument.
# print_debug() should receive one parameter: a text string to print out.
sub print_debug() {
    my $message = shift;
    if ($verb_val == 1) {
        print "DEBUG: " . $message . "\n";
    }
}

# comp_sig_ver() should receive three parameters: remote signature database
# version, local signature database version, and build date of local
# signatures database.
sub comp_sig_ver() {
    my $sig_rem   = shift;
    my $sig_local = shift;
    my $sig_date  = shift;
    if ($sig_local != $sig_rem) {
        my $diff = $sig_rem - $sig_local;
        $rev_word = ($diff == 1) ? "revision" : "revisions";
        if ($diff >= $crit_val) {
            &print_debug("Installed daily.cvd is behind clamav.net");
            $status = $ERRORS{'CRITICAL'};  # Will exit with CRITICAL status
            $status_print = "CRITICAL";
        } elsif ($diff >= $warn_val) {
            &print_debug("Installed daily.cvd is behind clamav.net");
            $status = $ERRORS{'WARNING'};   # Will exit with WARNING status
            $status_print = "WARNING";
        } else {
            &print_debug("Installed daily.cvd is behind clamav.net");
            $status = $ERRORS{'OK'};  # Will exit with OK status
            $status_print = "OK";
	}
        $msg  = "ClamAV " . $status_print . ": daily.cvd " . $sig_local .
            " out of date by " . $diff . " " . $rev_word . ".";
    } else {
        &print_debug("Installed daily.cvd matches latest from clamav.net");
        $status = $ERRORS{'OK'};  # Will exit with OK status
        $msg    = "ClamAV OK: daily.cvd " . $sig_local . " (" . $sig_date .
            ") is up to date.";
    }
    return $msg, $status;
}

# Show usage information
sub show_help() {
    print <<END;
$prog_name Nagios plugin $prog_ver (c) 2005 Darren Spruell <sancho\@sancho2k.net>

Perl Check ClamAV daily.cvd plugin for Nagios

Usage: $prog_name -w <warn> -c <crit> [-h] [-V] [-v]

-w, --warning=INTEGER
   Number of revisions behind current daily.cvd to generate a warning state (Default: 1)
-c, --critical=INTEGER
   Number of revisions behind current daily.cvd to generate a critical state (Default: 2)
-h, --help
   Show this help
-V, --version
   Output version information for the plugin
-v, --verbose
   Enable verbose output
END
}

GetOptions (
    "w=i" => \$warn_val, "warning=i" => \$warn_val,
    "c=i" => \$crit_val, "critical=i" => \$crit_val,
    "h" => \$help_val, "help" => \$help_val,
    "V" => \$vers_val, "version" => \$vers_val,
    "v" => \$verb_val, "verbose" => \$verb_val,
);
 
if ($help_val != 0) {
    &show_help;     
    exit $ERRORS{'OK'};
}

if ($vers_val != 0) {
    &print_revision($prog_name,$prog_ver);
    exit $ERRORS{'OK'};
}

# Make sure the binary exists.
if (-x $clamd_cmd) {
    &print_debug("Found clamd at $clamd_cmd");
} else {
    &print_debug("Can't execute clamd at $clamd_cmd");
    die("FATAL: Unable to execute $clamd_cmd");
}

&print_debug("Threshhold values: warning=$warn_val, critical=$crit_val");

# Should return something like: ClamAV 0.87.1/1205/Wed Dec  7 07:00:48 2005
chomp(my $clamd_ver = `$clamd_cmd -V`);

# Should return something like: 0.87.1:34:1206:1134072033:1
chomp(my $dnstxt_ver = `$dnstxt_cmd`);

# This block is a fixup to get the quotation marks that dig returns with the
# record off of the beginning and end of the string:
my $strip_quotes = ($dnstxt_ver =~ /"/);  # Matches if the answer has quotes
if ($strip_quotes) {
    &print_debug("Removing extraneous quotes from returned TXT record (dig workaround.)");
    $dnstxt_ver = substr($dnstxt_ver,1,-1);
} # End dig kludge

# Parse what we get from clamd -V and our DNS query
my @clamdresults = split(/\//,$clamd_ver);
my @txtresults   = split(/:/,$dnstxt_ver);

# Get the currently running ClamAV sig level and cvd date out of this
my $local_latest_daily   = $clamdresults[1];
my $local_latest_date    = $clamdresults[2];

&print_debug("Local daily.cvd dated $local_latest_date");
&print_debug("Local daily.cvd version = $local_latest_daily");

# Get the latest ClamAV daily signatures version out of this
my $clamav_latest_daily   = $txtresults[2];
&print_debug("Latest daily.cvd version = $clamav_latest_daily");

my @prog_sig_res = &comp_sig_ver($clamav_latest_daily, $local_latest_daily,
    $local_latest_date);

print $prog_sig_res[0] . "\n";
exit $prog_sig_res[1];
